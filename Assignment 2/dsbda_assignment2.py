# -*- coding: utf-8 -*-
"""DSBDA_Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nUW1Co-12GgCqUC_qLLrmt_mIXzlmHbc
"""

import pandas as pd
import numpy as np

!pip install -q kaggle

from google.colab import files
files.upload()

df=pd.read_csv("AcademicPerformance.csv")

df

df.head()

df.info()

df.describe(include="all")

df.shape

df.dtypes

df.columns

df[0:5]

df.loc[0:2]

df.loc[0:2,'DSBDA':'AI']

df.iloc[1:3]

df.iloc[1:5,1:5]

df.isnull()

df.isna()

df.isnull().any()

df.isnull().sum()

df.AI.isnull().sum()

cols_with_na = []
for col in df.columns:
  if df[col].isna().any():
    cols_with_na.append(col)
cols_with_na

df.replace(np.nan,value=0)

df.fillna(1)

df['Total Marks']=df['Total Marks'].fillna(df['Total Marks'].mean())

df.head(10)

df.dropna()

df.dropna(how="all")

df.dropna(axis=1)

df

df.dropna(axis=0,how='any',inplace=True)

df

import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(df)

df.boxplot()

sns.boxplot(x=df.Percentage)

sns.boxplot(x=df.AI)

import matplotlib.pyplot as plt
plt.rcParams["figure.figsize"] = (9, 6)
df_list = ['CC','WT','AI','Percentage']
fig, axes = plt.subplots(2, 2)
fig.set_dpi(120)

count=0
for r in range(2):
  for c in range(2):
    _ = df[df_list[count]].plot(kind = 'box', ax=axes[r,c])
    count+=1

Q1 = df['Percentage'].quantile(0.25)
Q3 = df['Percentage'].quantile(0.75)
IQR = Q3 - Q1
Lower_limit = Q1 - 1.5 * IQR
Upper_limit = Q3 + 1.5 * IQR
print(f'Q1 = {Q1}, Q3 = {Q3}, IQR = {IQR}, Lower_limit = {Lower_limit}, Upper_limit = {Upper_limit}')

df[(df['Percentage'] < Lower_limit) | (df['Percentage'] > Upper_limit)]

outliers=[]
for i in df.Percentage:
  if i<Lower_limit or i>Upper_limit:
    outliers.append(i)
print("outliers are",outliers)

Upper_limit

Lower_limit

df[df.Percentage<Lower_limit].index

df1=df.drop(df[df.Percentage<Lower_limit].index)

df1.shape

df2=df[df.Percentage<Lower_limit]
df2

sns.kdeplot(df.Percentage)

sns.kdeplot(df1.Percentage)

df.Percentage

log_percentage=np.log(df.Percentage)
log_percentage

sns.kdeplot(log_percentage)

import seaborn as sns

df.skew()

sns.kdeplot(df.DSBDA);

sns.kdeplot(df.WT);

sns.kdeplot(df.CC);

sns.kdeplot(df.AI);

sns.kdeplot(df.Percentage);



